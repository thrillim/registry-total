// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// This database is to store the data of Register Department which manage 
// + All the cars, their specifications, owner, and the car's register status
// + All regeistry centers, their info, and their accounts
// + All the car's register status, updated by the registry centers
// + The accounts of Department's admins and registry centers' admins

model Car {
  carId                   Int            @id @default(autoincrement())
  bienSo                  String         @unique
  soQuanLy                String
  loai                    String
  nhanHieu                String
  soLoai                  String
  soMay                   String
  soKhung                 String
  namSx                   Int
  nuocSx                  String
  nienHanSd               Int?
  kinhDoanh               Boolean
  caiTao                  Boolean
  congThucBanhXe          String
  vetBanhXe               String
  kichThuocBao            String
  ktKhoangHanhLyLonNhat   Int?
  chieuDaiCoSo            Int
  khoiLuongBanThan        Int
  khoiLuongHangCc         Int?
  khoiLuongToanBo         String?
  khoiLuongKeoTheo        String?
  soNguoi                 String?
  nhienLieu               String?
  theTichLamViecCuaDongCo Int?
  congSuatLonNhat         Int?
  tocDoQuay               Int?
  seri                    String?
  lopTruc                 String?
  thietBiGiamSatHanhTrinh Boolean
  camera                  Boolean
  khongCapTemKiemDinh     Boolean
  ghiChu                  String?
  dayMaSoQuanLy           String
  owner                   Owner          @relation(fields: [ownerId], references: [ownerId])
  ownerId                 String
  RegistStatus            RegistStatus[]
}

model Owner {
  ownerId      String @id
  ownerType    String
  ownerName    String
  ownerPhone   String
  ownerAddress String
  ownerEmail   String
  ownerCars    Car[]
}

model RegistCenter {
  centerId      String         @id
  centerName    String
  centerHotline String
  centerAddress String
  centerEmail   String
  centerManager String
  centerCode    String
  RegistStatus  RegistStatus[]
  Account       Account[]
}

model RegistStatus {
  statusId         Int          @id @default(autoincrement())
  RegistCenter     RegistCenter @relation(fields: [RegistCenterId], references: [centerId])
  RegistCenterId   String
  statusCar        Car          @relation(fields: [carId], references: [carId])
  carId            Int
  status           String
  statusCreatedAt  DateTime     @default(now())
  statusUpdatedAt  DateTime     @updatedAt
  statusNote       String?
  statusValidUntil DateTime?
}

model Account {
  accId                Int          @id @default(autoincrement())
  accUsername          String       @unique
  accPassword          String
  accRole              String
  RegistCenter         RegistCenter @relation(fields: [RegistCenterId], references: [centerId])
  RegistCenterId       String
  accStatus            String       @default("unverified")
  accVerifiedAt        DateTime?
  accVerifiedByAccount Int?
}

// + Manage valid period (months) of the car's register status follow the law effective date and the car's type
// Cũ: 01 tháng 10 năm 2021
// Mới: 22 tháng 3 năm 2023
// Các Giấy chứng nhận kiểm định và Tem kiểm định đã được cấp trước ngày Thông tư này có hiệu lực thì tiếp tục được sử dụng đến hết thời hạn ghi trong Giấy chứng nhận kiểm định và Tem kiểm định.
// nameCode format: <seat/special_car><commercial><year_from_produce/renovation>
// seat/special_car: under9, over9, special
// commercial: com, nocom
// year_from_produce/renovation: under5, under7, from7to20, over20, reno
model ValidPeriod {
  periodId               Int      @id @default(autoincrement())
  periodNameCode         String
  periodName             String?
  periodLawEffectiveDate DateTime
  firstPeriod            Int
  fromSecondPeriod       Int
}
